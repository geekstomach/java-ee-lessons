<?xml version="1.0" encoding="UTF-8" ?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence
    http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd"
             version="2.2">

     <persistence-unit name="ds" transaction-type="JTA"> <!--RESOURCE_LOCAL-->
         <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>

         <!--Все настройки подключения к БД лучше скрыть от посторонних глаз -->
        <jta-data-source>java:/jboss/datasources/MySQLDS</jta-data-source>
         <!--имя источника данных написанное в формате в системе катологов котоое сервер приложений использует для поиска всех ресурсов-->
         <!--Создать можно через вебинтрефейс сервера прилений либо с помощью скриптов см. Java EE. Lesson 5-->
         <properties>
<!--ТАк не работает...Никак не удалось(
             &lt;!&ndash;jpa&ndash;&gt;
             <property name="javax.persistence.jdbc.url"
                       value="jdbc:mysql://localhost:3306/java_ee"/>
&lt;!&ndash;?createDatabaseIfNotExist=true&amp;allowPublicKeyRetrieval=true&amp;useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC&ndash;&gt;

             &lt;!&ndash;Конфиденциальная информация, лучше использовать источник данных на сервере приложений &ndash;&gt;
             <property name="javax.persistence.jdbc.user" value="root"/>
             <property name="javax.persistence.jdbc.password" value="root"/>
             <property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver"/>
-->

             <!--hibernate-->
             <property name="hibernate.connection.useUnicode" value="true"/>
             <property name="hibernate.connection.characterEncoding" value="UTF-8"/>
             <!--Настройки удобные при разработке для лабораторных проектов, соответствие таблиц и сущностией-->
             <property name="hibernate.hbm2ddl.auto" value="update"/>
<!--             validate: проверить схему, не вносить изменения в базу данных.
             update: обновить схему.
             create: создает схему, уничтожая предыдущие данные.
             create-drop: отказаться от схемы, когда SessionFactory закрывается явно, как правило, когда приложение остановлено.-->

             <!--Настройки удобные при разработке, но сильно снижают производительность-->
             <property name="hibernate.show_sql" value="true"/> <!--показываем все запросы в консоль-->
             <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL57Dialect"/><!--используем диалект 5.7-->
             <property name="hibernate.format_sql" value="true"/><!--красиво форматируем-->
         </properties>
     </persistence-unit>
</persistence>
